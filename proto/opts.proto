syntax = "proto3";

package mypb;

option go_package = "github.com/updogliu/pboptions/proto";

import "google/protobuf/descriptor.proto";

extend google.protobuf.FileOptions {
  string my_file_option = 50000;
}
extend google.protobuf.MessageOptions {
  int32 my_message_option = 50001;
}
extend google.protobuf.FieldOptions {
  float my_field_option = 50002;
}
extend google.protobuf.EnumOptions {
  bool my_enum_option = 50003;
}
extend google.protobuf.EnumValueOptions {
  uint32 my_enum_value_option = 50004;
}
extend google.protobuf.ServiceOptions {
  MyEnum my_service_option = 50005;
}
extend google.protobuf.MethodOptions {
  MyMessage my_method_option = 50006;
}

option (my_file_option) = "Hello world!";

message MyMessage {
  option (my_message_option) = 1234;

  int32 foo = 1 [(my_field_option) = 4.5];
  string bar = 2;
}

enum MyEnum {
  option (my_enum_option) = true;

  FOO = 0 [(my_enum_value_option) = 321];
  BAR = 1;
}

message RequestType {}
message ResponseType {}

service MyService {
  option (my_service_option) = FOO;

  rpc MyMethod(RequestType) returns(ResponseType) {
    // Note:  my_method_option has type MyMessage.  We can set each field
    //   within it using a separate "option" line.
    option (my_method_option).foo = 567;
    option (my_method_option).bar = "Some string";
  }
}